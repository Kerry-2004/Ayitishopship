Je veux ameliorer cette code "const trackingSteps = [
    {id:'registered', title:'Colis Enregistré', icon:'fas fa-clipboard-check'},
    {id:'transit', title:'En Transit', icon:'fas fa-plane'},
    {id:'arrived', title:'Arrivé au Dépôt', icon:'fas fa-warehouse'},
    {id:'delivery', title:'En Cours de Livraison', icon:'fas fa-truck'},
    {id:'delivered', title:'Livré', icon:'fas fa-check-circle'}
];

function getStatusBadgeClass(status) {
    return {
        'registered':'status-registered',
        'transit':'status-transit',
        'arrived':'status-arrived',
        'delivery':'status-delivery',
        'delivered':'status-delivered'
    }[status] || 'status-registered';
}

function displayTrackingResult(data) {
    const container = document.getElementById('trackingResult');
    const html = `
        <h2>Colis de ${data.clientName}</h2>
        <p>Numéro de suivi: ${data.trackingNumber}</p>
        <p>Destination: ${data.destination}</p>
        <p>Poids: ${data.weight}</p>
        <p>Description: ${data.description}</p>
        <p>Statut: <span class="${getStatusBadgeClass(data.currentStatus)}">${data.currentStatus}</span></p>
        <p>Date prévue d'arrivée: ${new Date(data.estimatedDelivery).toLocaleDateString()}</p>
    `;
    container.innerHTML = html;
    container.style.display = 'block';
}

function displayNoResult() {
    const container = document.getElementById('trackingResult');
    container.innerHTML = '<p>Aucun colis trouvé avec ce numéro.</p>';
    container.style.display = 'block';
}

document.getElementById('trackingForm').addEventListener('submit', async function(e){
    e.preventDefault();
    const trackingNumber = document.getElementById('trackingNumber').value.trim();
    const btn = document.getElementById('searchBtn');
    const originalText = btn.innerHTML;
    btn.innerHTML = 'Recherche...';
    btn.disabled = true;

    try {
        const response = await fetch(`getColis.php?trackingNumber=${trackingNumber}`);
        const result = await response.json();
        if(result.success){
            const d = result.data;
            const data = {
                trackingNumber: d.numero_suivi,
                clientName: d.destinataire_nom,
                destination: d.ville_recuperation,
                weight: d.poids_lbs + ' lbs',
                description: d.description_detaillee,
                currentStatus: d.statut,
                estimatedDelivery: d.date_prevue_arrivee
            };
            displayTrackingResult(data);
        } else {
            displayNoResult();
        }
    } catch(err){
        alert('Erreur: '+err.message);
    } finally {
        btn.innerHTML = originalText;
        btn.disabled = false;
    }
});" pour permettre rendre comme ceci "const trackingSteps = [
    {id:'registered', title:'Colis Enregistré', icon:'fas fa-clipboard-check'},
    {id:'transit', title:'En Transit', icon:'fas fa-plane'},
    {id:'arrived', title:'Arrivé au Dépôt', icon:'fas fa-warehouse'},
    {id:'delivery', title:'En Cours de Livraison', icon:'fas fa-truck'},
    {id:'delivered', title:'Livré', icon:'fas fa-check-circle'}
];
        // code add in suivi ameliorer
        function generateMockData(trackingNumber) {
            // Générer des données de démonstration basées sur le numéro de suivi
            const statuses = ['registered', 'transit', 'arrived', 'delivery', 'delivered'];
            const currentStatusIndex = Math.floor(Math.random() * statuses.length);
            const currentStatus = statuses[currentStatusIndex];
            
            const baseDate = new Date();
            baseDate.setDate(baseDate.getDate() - 5);
            
        }
        // fin code

 function getStatusBadgeClass(status) {
            const statusClasses = {
                'registered': 'status-registered',
                'transit': 'status-transit',
                'arrived': 'status-arrived',
                'delivery': 'status-delivery',
                'delivered': 'status-delivered'
            };
            return statusClasses[status] || 'status-registered';
        }

        function getStatusText(status) {
            const statusTexts = {
                'registered': 'Enregistré',
                'transit': 'En Transit',
                'arrived': 'Au Dépôt',
                'delivery': 'En Livraison',
                'delivered': 'Livré'
            };
            return statusTexts[status] || 'Inconnu';
        }

        function formatDate(date) {
            return date.toLocaleDateString('fr-FR', {
                day: 'numeric',
                month: 'long',
                year: 'numeric',
                hour: '2-digit',
                minute: '2-digit'
            });
        }

function displayTrackingResult(data) {
            const Container = document.getElementById('trackingResult');
            
            const html = `
                <div class="package-header">
                    <div class="package-info">
                        <h3>Colis de ${data.clientName}</h3>
                        <div class="tracking-number">${data.trackingNumber}</div>
                    </div>
                    <div class="status-badge ${getStatusBadgeClass(data.currentStatus)}">
                        ${getStatusText(data.currentStatus)}
                    </div>
                </div>

                <div class="package-details">
                    <div class="detail-item">
                        <div class="detail-label">Destination</div>
                        <div class="detail-value">${data.destination}</div>
                    </div>
                    <div class="detail-item">
                        <div class="detail-label">Poids</div>
                        <div class="detail-value">${data.weight}</div>
                    </div>
                    <div class="detail-item">
                        <div class="detail-label">Description</div>
                        <div class="detail-value">${data.description}</div>
                    </div>
                </div>

                <div class="timeline">
                    ${data.timeline.map(step => `
                        <div class="timeline-item ${step.status}">
                            <div class="timeline-content">
                                <div class="timeline-title">
                                    <i class="${step.icon}"></i>
                                    ${step.title}
                                </div>
                                <div class="timeline-description">${step.description}</div>
                                ${step.date ? `<div class="timeline-date">${formatDate(step.date)}</div>` : ''}
                            </div>
                        </div>
                    `).join('')}
                </div>

                ${data.currentStatus !== 'delivered' ? `
                    <div class="estimated-delivery">
                        <h4><i class="fas fa-calendar-alt"></i> Livraison Estimée</h4>
                        <div class="estimated-date">${formatDate(data.estimatedDelivery)}</div>
                    </div>
                ` : ''}
            `;
            
            resultContainer.innerHTML = html;
            resultContainer.style.display = 'block';
        }

 function displayNoResult() {
            const resultContainer = document.getElementById('trackingResult');
            
            const html = `
                <div class="no-result">
                    <div class="no-result-icon">
                        <i class="fas fa-search"></i>
                    </div>
                    <h3 style="color: #374151; margin-bottom: 1rem;">Aucun Colis Trouvé</h3>
                    <p>Le numéro de suivi que vous avez saisi n'existe pas dans notre système.</p>
                    <p style="margin-top: 0.5rem;">Vérifiez le numéro et réessayez.</p>
                </div>
            `;
            
            resultContainer.innerHTML = html;
            resultContainer.style.display = 'block';
        }

// Gestion du formulaire de recherche
        document.getElementById('trackingForm').addEventListener('submit', function(e) {
            e.preventDefault();
            const trackingNumber = document.getElementById('trackingNumber').value.trim();
            const searchBtn = document.getElementById('searchBtn');
            const originalText = btn.innerHTML;
            btn.innerHTML = 'Recherche...';
            btn.disabled = true;

            if (!trackingNumber) {
                alert('Veuillez entrer un numéro de suivi');
                return;
            }
            
            // Animation de chargement
            searchBtn.innerHTML = '<i class="fas fa-spinner fa-spin"></i> Recherche...';
            searchBtn.disabled = true;
            
            // Simulation de recherche
            setTimeout(() => {
                // Vérifier d'abord dans localStorage
                const packages = JSON.parse(localStorage.getItem('packages') || '[]');
                const foundPackage = packages.find(pkg => pkg.trackingNumber === trackingNumber);
                
                if (foundPackage) {
                    // Utiliser les données réelles du localStorage
                    const mockData = {
                        trackingNumber: foundPackage.trackingNumber,
                        clientName: foundPackage.clientName,
                        destination: foundPackage.destination,
                        weight: foundPackage.weight + ' lbs',
                        description: foundPackage.description,
                        currentStatus: foundPackage.status || 'registered',
                        estimatedDelivery: new Date(Date.now() + (7 * 24 * 60 * 60 * 1000)),
                        timeline: trackingSteps.map((step, index) => ({
                            ...step,
                            status: index === 0 ? 'completed' : index === 1 ? 'active' : 'pending',
                            date: index === 0 ? new Date(foundPackage.createdAt) : 
                                  index === 1 ? new Date() : null
                        }))
                    };
                    displayTrackingResult(mockData);
                } else if (trackingNumber.toUpperCase().startsWith('AYITI')) {
                    // Générer des données de démonstration
                    const mockData = generateMockData(trackingNumber);
                    displayTrackingResult(mockData);
                } else {
                    displayNoResult();
                }
                
                // Réinitialiser le bouton
                searchBtn.innerHTML = originalText;
                searchBtn.disabled = false;
                
            }, 1500);
        });

        // Pré-remplir si un numéro de suivi est passé en paramètre URL
        const urlParams = new URLSearchParams(window.location.search);
        const trackingParam = urlParams.get('tracking');
        if (trackingParam) {
            document.getElementById('trackingNumber').value = trackingParam;
            document.getElementById('trackingForm').dispatchEvent(new Event('submit'));
        }"
